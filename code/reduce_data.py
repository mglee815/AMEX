import pandas as pd
import numpy as np
from fast_ml.feature_engineering import FeatureEngineering_DateTime
import re

dtype={'B_38': np.dtype(str),
 'D_68': np.dtype(str),
 'D_117': np.dtype(str),
 'D_126': np.dtype(str),
 'D_63': np.dtype(str),
 'D_120': np.dtype(str),
 'customer_ID': np.dtype(str),
 'B_30': np.dtype(str),
 'D_116': np.dtype(str),
 'D_66': np.dtype(str),
 'S_2': np.dtype(str),
 'D_114': np.dtype(str),
 'D_64': np.dtype(str),
       'B_31':np.dtype('int8'),
       'P_2':np.dtype('float16'),
 'D_39':np.dtype('float16'),
 'B_1':np.dtype('float16'),
 'B_2':np.dtype('float16'),
 'R_1':np.dtype('float16'),
 'S_3':np.dtype('float16'),
 'D_41':np.dtype('float16'),
 'B_3':np.dtype('float16'),
 'D_42':np.dtype('float16'),
 'D_43':np.dtype('float16'),
 'D_44':np.dtype('float16'),
 'B_4':np.dtype('float16'),
 'D_45':np.dtype('float16'),
 'B_5':np.dtype('float16'),
 'R_2':np.dtype('float16'),
 'D_46':np.dtype('float16'),
 'D_47':np.dtype('float16'),
 'D_48':np.dtype('float16'),
 'D_49':np.dtype('float16'),
 'B_6':np.dtype('float16'),
 'B_7':np.dtype('float16'),
 'B_8':np.dtype('float16'),
 'D_50':np.dtype('float16'),
 'D_51':np.dtype('float16'),
 'B_9':np.dtype('float16'),
 'R_3':np.dtype('float16'),
 'D_52':np.dtype('float16'),
 'P_3':np.dtype('float16'),
 'B_10':np.dtype('float16'),
 'D_53':np.dtype('float16'),
 'S_5':np.dtype('float16'),
 'B_11':np.dtype('float16'),
 'S_6':np.dtype('float16'),
 'D_54':np.dtype('float16'),
 'R_4':np.dtype('float16'),
 'S_7':np.dtype('float16'),
 'B_12':np.dtype('float16'),
 'S_8':np.dtype('float16'),
 'D_55':np.dtype('float16'),
 'D_56':np.dtype('float16'),
 'B_13':np.dtype('float16'),
 'R_5':np.dtype('float16'),
 'D_58':np.dtype('float16'),
 'S_9':np.dtype('float16'),
 'B_14':np.dtype('float16'),
 'D_59':np.dtype('float16'),
 'D_60':np.dtype('float16'),
 'D_61':np.dtype('float16'),
 'B_15':np.dtype('float16'),
 'S_11':np.dtype('float16'),
 'D_62':np.dtype('float16'),
 'D_65':np.dtype('float16'),
 'B_16':np.dtype('float16'),
 'B_17':np.dtype('float16'),
 'B_18':np.dtype('float16'),
 'B_19':np.dtype('float16'),
 'D_66':np.dtype('float16'),
 'B_20':np.dtype('float16'),
 'D_68':np.dtype('float16'),
 'S_12':np.dtype('float16'),
 'R_6':np.dtype('float16'),
 'S_13':np.dtype('float16'),
 'B_21':np.dtype('float16'),
 'D_69':np.dtype('float16'),
 'B_22':np.dtype('float16'),
 'D_70':np.dtype('float16'),
 'D_71':np.dtype('float16'),
 'D_72':np.dtype('float16'),
 'S_15':np.dtype('float16'),
 'B_23':np.dtype('float16'),
 'D_73':np.dtype('float16'),
 'P_4':np.dtype('float16'),
 'D_74':np.dtype('float16'),
 'D_75':np.dtype('float16'),
 'D_76':np.dtype('float16'),
 'B_24':np.dtype('float16'),
 'R_7':np.dtype('float16'),
 'D_77':np.dtype('float16'),
 'B_25':np.dtype('float16'),
 'B_26':np.dtype('float16'),
 'D_78':np.dtype('float16'),
 'D_79':np.dtype('float16'),
 'R_8':np.dtype('float16'),
 'R_9':np.dtype('float16'),
 'S_16':np.dtype('float16'),
 'D_80':np.dtype('float16'),
 'R_10':np.dtype('float16'),
 'R_11':np.dtype('float16'),
 'B_27':np.dtype('float16'),
 'D_81':np.dtype('float16'),
 'D_82':np.dtype('float16'),
 'S_17':np.dtype('float16'),
 'R_12':np.dtype('float16'),
 'B_28':np.dtype('float16'),
 'R_13':np.dtype('float16'),
 'D_83':np.dtype('float16'),
 'R_14':np.dtype('float16'),
 'R_15':np.dtype('float16'),
 'D_84':np.dtype('float16'),
 'R_16':np.dtype('float16'),
 'B_29':np.dtype('float16'),
 'B_30':np.dtype('float16'),
 'S_18':np.dtype('float16'),
 'D_86':np.dtype('float16'),
 'D_87':np.dtype('float16'),
 'R_17':np.dtype('float16'),
 'R_18':np.dtype('float16'),
 'D_88':np.dtype('float16'),
 'S_19':np.dtype('float16'),
 'R_19':np.dtype('float16'),
 'B_32':np.dtype('float16'),
 'S_20':np.dtype('float16'),
 'R_20':np.dtype('float16'),
 'R_21':np.dtype('float16'),
 'B_33':np.dtype('float16'),
 'D_89':np.dtype('float16'),
 'R_22':np.dtype('float16'),
 'R_23':np.dtype('float16'),
 'D_91':np.dtype('float16'),
 'D_92':np.dtype('float16'),
 'D_93':np.dtype('float16'),
 'D_94':np.dtype('float16'),
 'R_24':np.dtype('float16'),
 'R_25':np.dtype('float16'),
 'D_96':np.dtype('float16'),
 'S_22':np.dtype('float16'),
 'S_23':np.dtype('float16'),
 'S_24':np.dtype('float16'),
 'S_25':np.dtype('float16'),
 'S_26':np.dtype('float16'),
 'D_102':np.dtype('float16'),
 'D_103':np.dtype('float16'),
 'D_104':np.dtype('float16'),
 'D_105':np.dtype('float16'),
 'D_106':np.dtype('float16'),
 'D_107':np.dtype('float16'),
 'B_36':np.dtype('float16'),
 'B_37':np.dtype('float16'),
 'R_26':np.dtype('float16'),
 'R_27':np.dtype('float16'),
 'B_38':np.dtype('float16'),
 'D_108':np.dtype('float16'),
 'D_109':np.dtype('float16'),
 'D_110':np.dtype('float16'),
 'D_111':np.dtype('float16'),
 'B_39':np.dtype('float16'),
 'D_112':np.dtype('float16'),
 'B_40':np.dtype('float16'),
 'S_27':np.dtype('float16'),
 'D_113':np.dtype('float16'),
 'D_114':np.dtype('float16'),
 'D_115':np.dtype('float16'),
 'D_116':np.dtype('float16'),
 'D_117':np.dtype('float16'),
 'D_118':np.dtype('float16'),
 'D_119':np.dtype('float16'),
 'D_120':np.dtype('float16'),
 'D_121':np.dtype('float16'),
 'D_122':np.dtype('float16'),
 'D_123':np.dtype('float16'),
 'D_124':np.dtype('float16'),
 'D_125':np.dtype('float16'),
 'D_126':np.dtype('float16'),
 'D_127':np.dtype('float16'),
 'D_128':np.dtype('float16'),
 'D_129':np.dtype('float16'),
 'B_41':np.dtype('float16'),
 'B_42':np.dtype('float16'),
 'D_130':np.dtype('float16'),
 'D_131':np.dtype('float16'),
 'D_132':np.dtype('float16'),
 'D_133':np.dtype('float16'),
 'R_28':np.dtype('float16'),
 'D_134':np.dtype('float16'),
 'D_135':np.dtype('float16'),
 'D_136':np.dtype('float16'),
 'D_137':np.dtype('float16'),
 'D_138':np.dtype('float16'),
 'D_139':np.dtype('float16'),
 'D_140':np.dtype('float16'),
 'D_141':np.dtype('float16'),
 'D_142':np.dtype('float16'),
 'D_143':np.dtype('float16'),
 'D_144':np.dtype('float16'),
 'D_145':np.dtype('float16')
      
}


input = input("type train or test : ")

if input == "train":
      data=pd.read_csv('../data/train_data.csv',dtype=dtype)
if input == "test":
      data=pd.read_csv('../data/test_data.csv',dtype=dtype)

data=data.drop(['customer_ID'],axis=1)

data=data[data.columns[data.isnull().mean() < 0.5]]
data.S_2=pd.to_datetime(data.S_2, infer_datetime_format=True)

dt_fe = FeatureEngineering_DateTime()
dt_fe.fit(data, datetime_variables=['S_2'])
data = dt_fe.transform(data)

nunique_data=data.nunique().reset_index()
remove_col=nunique_data[(nunique_data[0]==len(data)) | (nunique_data[0]==0) | (nunique_data[0]==1) ]['index'].tolist()
data=data.drop(remove_col,axis=1)
total_col=data.columns.tolist()

data=data.drop(['S_2'],axis=1)
data[['S_2:year',
 'S_2:quarter',
 'S_2:month',
 'S_2:day',
 'S_2:day_of_week',
 'S_2:day_of_year',
 'S_2:weekofyear',
 'S_2:is_month_end',
 'S_2:is_month_start',
 'S_2:is_quarter_end',
 'S_2:is_quarter_start',
 'S_2:is_year_end',
 'S_2:is_year_start',
 'S_2:is_weekend']]=data[['S_2:year',
 'S_2:quarter',
 'S_2:month',
 'S_2:day',
 'S_2:day_of_week',
 'S_2:day_of_year',
 'S_2:weekofyear',
 'S_2:is_month_end',
 'S_2:is_month_start',
 'S_2:is_quarter_end',
 'S_2:is_quarter_start',
 'S_2:is_year_end',
 'S_2:is_year_start',
 'S_2:is_weekend']].astype('int8')

if input == "train":
      train_y=pd.read_csv('../data/train_labels.csv',dtype={'target':np.dtype('int8')})
      train_y=train_y[['target']]

      data['target']=train_y['target']
      del train_y
      data.target=data.target.astype('float16')

data = data.rename(columns = lambda x:re.sub('[^A-Za-z0-9_]+', '', x))

if input == "train":
      pd.to_pickle(data, "../data/train.pkl")
if input == "test":
      pd.to_pickle(data, "../data/test.pkl")
print(data.info(verbose=True))